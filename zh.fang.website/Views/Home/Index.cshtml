@model zh.fang.website.Models.ClsTotalTableHeaderModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section scripts{
    <script type="text/javascript" src="@Url.Content("~/Scripts/baidu/echarts.min.js")"></script>
    <script type="text/javascript">

        var piedata = undefined;
        function drawPieOnToday(id)
        {
            var myChart = echarts.init(document.getElementById(id));
            $.get("@Url.Action("ClsTotalOnToday")", null, function (data) {
                piedata = data;
                var option = {
                    title: {
                        text: '本日警情分布'
                    },
                    tooltip: {
                        trigger: 'item',
                        formatter: "{a} <br/>{b}: {c} ({d}%)"
                    },
                    legend: {
                        orient: 'horizontal',
                        bottom: 20,
                        left: 20,
                        right: 20,
                        data: data.legends,
                        formatter: function (name) {
                            var val = 0;
                            if (!!piedata.itotals) {
                                for (var i = 0; i < data.itotals.length; i++) {
                                    var item = data.itotals[i];
                                    if (name == item.name) {
                                        val = item.value;
                                        break;
                                    }
                                }
                            }
                            return name + ': ' + val;
                        }
                    },
                    series: [
                        {
                            name: '',
                            type: 'pie',
                            selectedMode: 'single',
                            center: ['50%', '40%'],
                            radius: [0, '30%'],

                            label: {
                                normal: {
                                    position: 'inner',
                                    show: true,
                                    formatter: "{b}"
                                }
                            },
                            labelLine: {
                                normal: {
                                    show: false
                                }
                            },
                            data: data.itotals
                        },
                        {
                            name: '',
                            type: 'pie',
                            center: ['50%', '40%'],
                            radius: ['40%', '55%'],
                            label: {
                                normal: {
                                    show: true,
                                    formatter: "{b}"
                                }
                            },
                            data: data.ototals
                        }
                    ]
                };
                myChart.setOption(option);
            });
        }

        function drawCompareBar(id, url)
        {
            var myChart = echarts.init(document.getElementById(id));
            $.get(url, null, function (data) {
                var option = {
                    title: {
                        text: data.title
                    },
                    tooltip: {
                        trigger: 'axis',
                        showDelay: 0,
                        axisPointer: {
                            type: 'shadow'
                        }
                    },
                    toolbox: {
                        feature: {
                            dataView: { show: true, readOnly: false },
                            magicType: { show: true, type: ['line', 'bar'] },
                            restore: { show: true },
                            saveAsImage: { show: true }
                        }
                    },
                    legend: {
                        data: data.legends
                    },
                    grid: {
                        x: 10,
                        x2: 10,
                        y2: 60,
                        containLabel: true
                    },
                    xAxis: [
                        {
                            type: 'category',
                            data: data.categories,
                            boundaryGap : true,
                            show : true,
                            axisLabel: {
                                interval: 0,
                                rotate: 30
                            }
                        }
                    ],
                    yAxis: [
                        {
                            type: 'value',
                            name: '起数'
                        },
                        {
                            type: 'value',
                            name: '环比'
                        }
                    ],
                    series: [
                        {
                            label: {
                                normal: {
                                    show: true,
                                    position: 'top'
                                }
                            },
                            name: data.item1.name,
                            type: 'bar',
                            data: data.item1.totals
                        },
                        {
                            label: {
                                normal: {
                                    show: true,
                                    position: 'top'
                                }
                            },
                            name: data.item2.name,
                            type: 'bar',
                            data: data.item2.totals
                        },
                        {
                            name: data.lrr.name,
                            type: 'line',
                            yAxisIndex: 1,
                            data: data.lrr.totals
                        }
                    ]
                };
                myChart.setOption(option);
            });
        }

        function drawBarOnWeek(id)
        {
            drawCompareBar(id, "@Url.Action("ClsTotalCompareOnWeek")");
        }

        function drawBarOnMonth(id)
        {
            drawCompareBar(id, "@Url.Action("ClsTotalCompareOnMonth")");
        }

        $(document).ready(function () {

            drawPieOnToday('x-pie-today');
            drawBarOnWeek('x-bar-week');
            drawBarOnMonth('x-bar-month');
            //$("div.panel-title").css("font-size", "16px");
            //$("div.panel-title").css("font-weight", "700");
        });
    </script>
}
<script type="text/javascript">

        var fmtTotal = function (val, row) {
            return '<div style="background-color:#e7eafa; color:#000000;">' + val + '</div>';
            //return val;
        };

        var fmtSum = function (val, row) {
            return '<div style="background-color:#e7eafa; color:#000000;">' + val + '</div>';
            //return val;
        };
    
        var fmtRender = function (val, row) {
            var field = this.field;
            var vvl = row.verif[field];
            if (!val) {
                return val;
            }

            var color = "#ffffff";
            var fcolor = "#000000";
            if (val < vvl) {
                color = "green";
                fcolor = "#ffffff";
            }

            var vvl4 = vvl + vvl * 0.4;
            var vvl6 = vvl + vvl * 0.6;
            if (val >= vvl && val < vvl4) {
                color = "green";
                fcolor = "#ffffff";
            }

            if (val >= vvl4 && val < vvl6) {
                color = "darkorange";
                fcolor = "#ffffff";
            }

            if (val >= vvl6) {
                color = "darkred";
                fcolor = "#ffffff";
            }

            return '<div style="background-color:' + color + '; color:' + fcolor+';">' + val + '</div>';
        };

</script>
<div id="x-body-chart" class="easyui-layout x-clear-border x-body" style="margin-top:5px; min-height:560px;">
    <div id="x-chart-left" data-options="region:'west'" class="x-clear-border" title="" style="width:40%; ">
        <div id="x-pie-today" style="margin:10px 15px auto 0px; border:1px solid #95B8E7; min-height:540px; "></div>
    </div>
    <div id="x-chart-center" data-options="region:'center'" title="" class="x-clear-border" style="">
        <div id="x-bar-week" style="margin:10px 0px auto 10px; border:1px solid #95B8E7; min-height:270px; "></div>
        <div id="x-bar-month" style="margin:19px 0px auto 10px; border:1px solid #95B8E7; min-height:250px; "></div>
    </div>
</div>
<div class="easyui-panel" title="警情简要" style="width:100%;padding:10px;">
    @Html.Raw(ViewBag.HomeTitle)
</div>
<div class="easyui-tabs" style="padding-top:10px; height:auto;">
    <div title="各辖区警情分色预警表" class="x-clear-border" style="padding:10px;">
        <div style="padding:5px;">
            <div style="height:26px; line-height:26px;">
                下面表格统计最近六周的各类警情数据，并将统计后的数据除以六，最后呈现的是最近六周内各类警情的每周平均数据。
            </div>
            <div>
                分色说明：
                <div style="padding:5px; color:red;">
                    1，以最近六周的上一个六周内的各类警情平均数据为基础；
                    <br />
                    2，如果最近六周的平均值不超过上一个六周的平均数，那么显示绿色；
                    <br />
                    3，如果最近六周的平均值达到并不超过上一个六周的平均数的40%，那么显示黄色；
                    <br />
                    4，如果最近六周的平均值达到并超过上一个六周的平均数的40%，同时不超过上一个六周的平均数的60%，那么显示橙色；
                    <br />
                    5，如果最近六周的平均值达到并超过上一个六周的平均数的60%，那么显示红。
                </div>
            </div>
        </div>
        <table class="easyui-treegrid" style="width:100%;min-height:150px;"
               data-options="
               url: '@Url.Action("GetData")' ,
               method: 'get' ,
               rownumbers: true,
               showFooter: true,
               fitColumns: true,
               idField: 'id' ,
               treeField: '@Model.company.field'
               ">
            <thead>
                <tr>
                    <th data-options="field:'@Model.company.field'" rowspan="2">@Model.company.title</th>
                    @foreach (var item in Model.items)
                    {
                        if (0 == item.items.Length)
                        {
                            <th data-options="field:'@item.field',align:'center',width:1,formatter:fmtRender" rowspan="2">@Html.Raw(string.Join("<br />", item.title.ToArray()))</th>
                            continue;
                        }
                        <th colspan="@(item.items.Length)">@Html.Raw(item.title)</th>
                    }
                </tr>
                <tr>
                    @foreach (var item in Model.items)
                    {
                        if (0 < item.items.Count())
                        {
                            foreach (var cell in item.items)
                            {
                                <th data-options="field:'@cell.field',align:'center',width:1,formatter:fmtRender">@Html.Raw(string.Join("<br />", cell.title.ToArray()))</th>
                            }
                        }
                    }
                </tr>
            </thead>
        </table>
    </div>
    <div title="昨日警情数据" class="x-clear-border" style="padding:10px;">
        <div style="height:26px; line-height:26px; padding:5px;">
            下面表格统计昨日警情数据
        </div>
        <table class="easyui-treegrid" style="width:100%;min-height:150px;"
               data-options="
               url: '@Url.Action("GetDataOnYesterday")' ,
               method: 'get' ,
               rownumbers: true,
               showFooter: true,
               fitColumns: true,
               idField: 'id' ,
               treeField: '@Model.company.field'
               ">
            <thead>
                <tr>
                    <th data-options="field:'@Model.company.field'" rowspan="2">@Model.company.title</th>
                    <th data-options="field:'@Model.total.field',align:'center',width:1,formatter:fmtTotal" rowspan="2">@Html.Raw(string.Join("<br />", Model.total.title.ToArray()))</th>
                    @foreach (var item in Model.items)
                    {
                        if (0 == item.items.Length)
                        {
                            <th data-options="field:'@item.field',align:'center',width:1" rowspan="2">@Html.Raw(string.Join("<br />", item.title.ToArray()))</th>
                            continue;
                        }
                        <th colspan="@(item.items.Length + 1)">@Html.Raw(item.title)</th>
                    }
                </tr>
                <tr>
                    @foreach (var item in Model.items)
                    {
                        if (0 < item.items.Count())
                        {
                            <th data-options="field:'@item.field',align:'center',width:1,formatter:fmtSum">@Html.Raw(string.Join("<br />", "小计".ToArray()))</th>
                            foreach (var cell in item.items)
                            {
                                <th data-options="field:'@cell.field',align:'center',width:1">@Html.Raw(string.Join("<br />", cell.title.ToArray()))</th>
                            }
                        }
                    }
                </tr>
            </thead>
        </table>
    </div>
    <div title="本周警情数据" class="x-clear-border" style="padding:10px;">
        <div style="height:26px; line-height:26px; padding:5px;">
            下面表格统计本周警情数据
        </div>
        <table class="easyui-treegrid" style="width:100%;min-height:150px;"
               data-options="
               url: '@Url.Action("GetDataOnCurrentWeek")' ,
               method: 'get' ,
               rownumbers: true,
               showFooter: true,
               fitColumns: true,
               idField: 'id' ,
               treeField: '@Model.company.field'
               ">
            <thead>
                <tr>
                    <th data-options="field:'@Model.company.field'" rowspan="2">@Model.company.title</th>
                    <th style="background-color:darkred;" data-options="field:'@Model.total.field',align:'center',width:1,formatter:fmtTotal" rowspan="2">@Html.Raw(string.Join("<br />", Model.total.title.ToArray()))</th>
                    @foreach (var item in Model.items)
                    {
                        if (0 == item.items.Length)
                        {
                            <th data-options="field:'@item.field',align:'center',width:1" rowspan="2">@Html.Raw(string.Join("<br />", item.title.ToArray()))</th>
                            continue;
                        }
                        <th colspan="@(item.items.Length + 1)">@Html.Raw(item.title)</th>
                    }
                </tr>
                <tr>
                    @foreach (var item in Model.items)
                    {
                        if (0 < item.items.Count())
                        {
                            <th style="background-color:darkred;" data-options="field:'@item.field',align:'center',width:1,formatter:fmtSum">@Html.Raw(string.Join("<br />", "小计".ToArray()))</th>
                            foreach (var cell in item.items)
                            {
                                <th data-options="field:'@cell.field',align:'center',width:1">@Html.Raw(string.Join("<br />", cell.title.ToArray()))</th>
                            }
                        }
                    }
                </tr>
            </thead>
        </table>
    </div>
</div>